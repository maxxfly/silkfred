exit
assemble.pixel_color(0,0).to_color
assemble.pixel_color(0,0)
assemble
exit
image_1_dimensions[0].to_f / image_1_dimensions[1] * dest_height
image_1_dimensions[0].to_f / image_1_dimensions[1]
image_1_dimensions[0] / image_1_dimensions[1]
image_1_dimensions[0] / <
image_1_dimensions[1]
image_1_dimensions[0]
(image_1_dimensions[0] / image_1_dimensions[1] * dest_height)
dest_height
exit
green_200.first.rows
green_200.first.height
green_200.first.columns
Image.new(path_fixture.join('green_200.png') 
include Magick
Image.new(path_fixture.join('green_200.png') )
green_200
green_200.first
green_200.height
exit
green_200
exit
green_200
exit
path_fixture
path_fixture.join('/green_200.png')
exit
path_fixture.join('green_200.png')
path_fixture + '/green_200.png'
path_fixture
exit
@batch_montage.montages
@batch_montage.montages_build
@batch_montage.montages.build
@batch_montage.montages
@batch_montage.montage
@batch_montage
